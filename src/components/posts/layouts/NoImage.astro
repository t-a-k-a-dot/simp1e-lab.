---
import { formatDate } from '~/lib/utils'
import Prose from '~/components/posts/base/Prose.astro'

interface Props {
  frontmatter: any
  minutesRead?: string
}

const { frontmatter, minutesRead } = Astro.props
---

<article class="relative fade-up">
  <div class="px-6 sm:px-8 py-6 sm:py-8">
    <div class="max-w-3xl mx-auto">
      <header class="mb-12 space-y-8">
        <div class="space-y-6 text-center">
          {
            frontmatter.description && (
              <p class="text-sm text-muted-foreground/90 leading-relaxed max-w-2xl mx-auto">{frontmatter.description}</p>
            )
          }

          <div class="space-y-4">
            <h1 class="text-2xl sm:text-3xl font-serif leading-tight tracking-wide text-balance" data-pagefind-body>
              {frontmatter.title}
            </h1>
          </div>

          <div class="flex flex-wrap items-center justify-center gap-4 text-sm text-muted-foreground/85">
            <div class="flex items-center gap-1.5">
              <span class="icon-[ph--calendar-blank] w-4 h-4 opacity-85"></span>
              <time datetime={frontmatter.pubDate.toISOString()}>
                {formatDate(frontmatter.pubDate)}
              </time>
            </div>
            {
              frontmatter.updatedDate && (
                <>
                  <span class="text-muted-foreground/30">/</span>
                  <div class="flex items-center gap-1.5">
                    <span class="icon-[ph--clock-clockwise-light] w-4 h-4 opacity-85" />
                    <time datetime={frontmatter.updatedDate.toISOString()}>{formatDate(frontmatter.updatedDate)}</time>
                  </div>
                </>
              )
            }
            {
              minutesRead && (
                <>
                  <span class="text-muted-foreground/30">/</span>
                  <div class="flex items-center gap-1.5">
                    <span class="icon-[ph--clock] w-4 h-4 opacity-85" />
                    <span>{minutesRead} min read</span>
                  </div>
                </>
              )
            }
          </div>

          <div class="flex gap-2 sm:gap-3 flex-wrap justify-center pt-2">
            {
              frontmatter.tags?.map((tag: string) => (
                <a
                  href={`/tags/${tag}`}
                  class="px-3 sm:px-4 py-1 sm:py-1.5 text-[10px] sm:text-xs tracking-widest
                         bg-tag-bg text-tag-text border border-tag-border rounded-full
                         hover:bg-tag-bg-hover hover:border-primary/30 hover:text-foreground
                         transition-all duration-300 group"
                  aria-label={`View posts tagged with ${tag}`}
                >
                  <span class="opacity-90 group-hover:opacity-100">#{tag}</span>
                </a>
              ))
            }
          </div>
        </div>
      </header>

      <Prose>
        <slot />
      </Prose>
    </div>
  </div>
</article>
